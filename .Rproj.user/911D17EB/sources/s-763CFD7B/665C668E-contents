#Kolokwium zad 1

#Wykonaj nastepujace polecenia:
#Wyczysc srodowisko.
#Wygeneruj zestaw 20 kolejnych liczb calkowitych dodatnich ze zbioru liczb calkowitych podzielnych przez 191 z reszta 66.
#Przypisz na 3 rozne sposoby do tego wektora nazwa
#Zapisz polecenie wybierajace z tego wektora wszystkie liczby nieparzyste.
#Jako odpowiedź podaj największą otrzymaną liczbę spośród 20.

rm(list = ls())
0:19 * 199 + 66

w1 <- 0:19 * 199 + 66
w1
w2 = 0:19 * 191 + 6
assign('w3', 0:19 * 191 + 66)

#1 sposob
w1[w1 %% 2 == 0]
#2 sposob
w1[w1 %% 2 != 1]

#Zadanie 2

#Wykonaj następujące polecenia:
#Wyczyść środowisko.
#Ustaw generator liczb pseudolosowych na 150.
#Wygeneruj 2 zestawy po 10 liczb pseudolosowych z rozkładów jednostajnego i gamma z parametrami równymi odpowiednio 2.2 i 6.2.
#Dla tych zestawów wyznacz wartości dystrybuant.
#Stwórz macierz z tymi wartościami nazywając kolejne zmienne (kolumny) nazwami rozkładów
#poprzedzonymi prefiksem (“Los” dla wartości losowych i “Dys” dla dystrybuanty).
#Wyświetl wektor zawierający sumę wartości w wierszach macierzy poprzednio stworzonej.
#Wyświetl wektora zawierającego sumę wartości w kolumnach macierzy poprzednio stworzonej.
#Wyświetl macierz zawierającą sześciany wartości macierzy poprzednio stworzonej.
#Podaj największą otrzymaną liczbę wśród z liczb pseudolosowych z rozkładu jednostajnego.

rm(list = ls())

set.seed(150)

z1 <- runif(10, min = 2.2, max = 6.2)
z2 <- rgamma(10, shape = 2.2, rate = 6.2)
z3 <- rnorm(10, mean = 1.4, sd = 4.4)

d1 <- punif(z1, min = 2.2, max = 6.2)
d2 <- pgamma(z2, shape = 2.2, rate = 6.2)
d3 <- pnorm(z3, mean  = 1.4, sd = 4.4)

m <- matrix(c(z1, z2, d1, d2),ncol = 4, nrow = 10)             
m
colnames(m) <- c('Los.unif', 'Los.gamma', 'Dys.unif', 'Dys.gamma')
m

apply(m, MARGIN = 1, FUN = sum)
rowSums(m)

apply(m, MARGIN = 2, FUN = sum)
colSums(m)

#Szescian macierzy
m^3

m[1,1]
m[1,1]^3

max(z1)

# Zadanie 3

#Wykonaj następujące polecenia:
#Wyczyść środowisko.
#Ustaw generator liczb pseudolosowych na 608.
#Wygeneruj 2 zestawy po 10 liczb pseudolosowych z rozkładów gamma 
# i beta z parametrami równymi odpowiednio 2 i 4.6.
#Dla tych zestawów wyznacz wartości gęstości.
#Stwórz ramkę danych z tymi wartościami nazywając kolejne zmienne 
# (kolumny) nazwami rozkładów poprzedzonymi prefiksem (“Los” dla wartości losowych i “Ges” dla gęstości).
#Stwórz listę zawierającą pola (z odpowiednimi nazwami)
#własne imię,
#własne nazwisko,
#wartość generatora liczb pseudolosowych,
#wektory liczb pseudolosowych,
#wartości gęstości,
#ramkę danych uprzednio stworzoną,
#wektor czynników losowych o długości 12 o wartościach ze zbioru “gmina miejska”, 
# “gmina wiejska”, “gmina miejsko-wiejska” (wygenerowany przy ustawionej wartości ziarna generatora, jaka podano na początku zadania).
#Wyznacz sumę skumulowaną liczb pseudolosowych z rozkładu gamma i podaj jej piąty wyraz.

rm(list = ls())

set.seed(608)

z1 <- rgamma(10, shape = 2, rate = 4.6)
z2<- rbeta(10, shape1 = 2, shape2 = 4.6)

d1 <- dgamma(z1, shape = 2, rate = 4.6)
d2 <- dbeta(z2, shape1 = 2, shape2 = 4.6)

df <- data.frame(Los.gamma = z1, Los.beta = z2, Ges.gamma = d1, Ges.beta = d2)
df
?sample
set.seed(608)
w <- sample(c('gmina miejska', 'gmina wiejska', 'gmina miejsko-wiejska'), 12, replace = TRUE)
w
w <- as.factor(w)
w
class(w)

l <- list(imie = 'Marta',
          nazwisko = 'G',
          ziarn.generatora = 608,
          los.gamma = z1,
          los.beta = z2,
          ges.gamma = d1,
          ges.beta = d2,
          df = df,
          czynniki = w)
l

accumulate(z1, `+`) -> sumka 
sumka[[5]]

# Zadanie 4

#Napisz funkcję, która będzie sprawdzać, czy liczba naturalna jest pierwsza 
# i wyświetlała na konsoli jeden z komunikatów
#Liczba (tutaj liczba sprawdzana) jest pierwsza.
#Liczba (tutaj liczba sprawdzana) jest nie jest pierwsza.


czyPierwsza <- function(a)
{
  
}
